#include <iostream>
#include <string>

using namespace std;



/*

定义：当用同类型的另一个对象初始化本对象时做什么，就是在初始化的时候，右侧对象可以先隐式转换对象再通过 = 赋给左侧运算对象

如果一个构造函数的第一个参数是自身类类型的引用，且任何额外参数都有默认值，则此构造函数是拷贝构造函数
会被隐式的使用，因为不该是explicit

直接初始化是调用相对的构造函数
拷贝是将右侧运算对象拷贝到正在创建的对象中

= 会发生拷贝初始化
一个对象作为实参传给非引用类型的形参
从一个返回类型为非引用类型的函数返回一个对象
用花括号列表初始化一个数组中的元素
*/
int main() {

	int a;
	// 拷贝初始化与直接初始化
	string s1(10, '.');// 直接
	string s2(s1);//直接
	string s3 = s2;// 拷贝
	string s4 = "9-9999-999";// 拷贝
	string s5 = string(100, '9');// 拷贝

	// 参数和返回值
	/*
	非引用类型的参数要进行拷贝初始化
	非引用的返回类型，返回值会被用来初始化调用方的结果，是拷贝初始化
	所以拷贝构造函数的参数是引用的，用来初始化非应用类型
	*/

	// 编译器可以绕过拷贝构造函数
	string s7 = "999";//拷贝初始化
	string s8("9999");// 可直接调用构造函数来初始化就是直接初始化


	// 练习
	// 13
	cin >> a;
	return 0;
}