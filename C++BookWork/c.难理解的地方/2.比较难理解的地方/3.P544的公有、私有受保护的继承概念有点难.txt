引出：
每个类分别控制自己的成员初始化过程，每个类还分别控制着其成员对于派生类来说是否可访问

一、受保护的成员
protected:
1.受保护的成员对于类的用户来说是不可访问的，就是类的实例不可访问
2.对于类的派生类和友元来说可以访问
3.重要的一点：派生类的成员或友元只能通过派生类对象来访问
派生类对象中基类部分的protected成员
不能用基类对象来访问，在派生类的内部也可以访问，因为this对象

二、公有、私有和受保护的继承
a)某各类对其继承而来的成员的访问权限收到两个因素影响：
1.在基类中成员的访问说明符
2.在派生类的派生列表中的访问说明符

b)对于派生类的成员（及友元）（this或对象）能否访问直接基类的public,protected，private成员：
派生类派生列表访问说明符没什么影响，对基类中成员的访问说明符有影响
基类中成员说明符：public,protected 能访问，private就不能访问
前提注意：
派生类的成员或友元不能让派生类的对象是const的！不然不可访问public的成员

c)派生类列表访问说明符的目的是控制派生类的用户（包括派生类的派生类在内）对于基类的成员的访问权限：
若派生类列表访问说明符是：
public，可以访问
private，则不可以访问
*就是若D私有继承B ，D d，这样的用户不可访问基类的public成员，但是若在D内部使用D d可以访问基类的public成员，很奇怪！

d)派生访问说明符还可以控制继承自派生类的新类的访问权限：
1.继承private的派生类的新类无法访问间接基类的protect成员

因为private的直接基类将其私有了

若访问说明符是protected或者public则可以

三、派生类向基类转换的可访问性
由该转换的代码决定（位置），同时派生类的访问说明符也有影响
1.只有D公有的继承B时
用户代码才能使用派生类向基类的转换(在main中或其它地方)，若是私有或受保护的则不能

2.不论D以什么方式继承B，D的成员函数和友元都能让派生类向基类的转换，是永远可行的

3.若D公有或者受保护的继承B，对于D的“派生类E”，E的成员和友元可以使用D（或E）向B的类型转换
反之，如果D继承B的方式是私有的，则不能使用

note:在上述的3种情况的代码中，如果街垒的公有成员可以访问的，则派生类向基类的转换是可行的，反之不可

关键概念：类的设计与受保护的成员
1.不考虑继承,一个类有两种不同的用户
1）普通用户：负责类的对象，只能访问类的公有接口成员
2）类的实现者：负责编写类的成员和友元的代码，能访问类的公有，也可以私有

2.考虑继承，第三种用户，派生类
则多了一个受保护的成员
1）普通用户：不能访问受保护的成员
2）类的实现者：可以访问受保护，但不能访问private

3.基类应该将其接口成员为公有的
实现的部分分两组：
一组可供派生类访问,应该声明protected
一组由基类及基类的友元访问，应该声明private
